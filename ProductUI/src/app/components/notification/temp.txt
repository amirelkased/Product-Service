import {ChangeDetectorRef, Component, OnInit} from '@angular/core';
import {Notification, NotificationService} from '../../services/notification.service';
import {CommonModule, NgClass} from '@angular/common';
import {FormsModule} from '@angular/forms';

@Component({
  selector: 'app-notification',
  standalone: true,
  providers: [NotificationService],
  imports: [
    NgClass, CommonModule, FormsModule
  ],
  templateUrl: './notification.component.html',
  styleUrls: ['./notification.component.css']
})
export class NotificationComponent implements OnInit {
  notification: Notification | null = null;

  constructor(private readonly notificationService: NotificationService, private readonly cdr: ChangeDetectorRef) {
    console.log('NotificationService instance created');
  }

  ngOnInit(): void {
    this.notificationService.notification$.subscribe((notification: Notification | null) => {
      console.log('Received notification:', notification);

      // Check if notification is null and set default message
      if (notification) {
        this.notification = notification;
      } else {
        // Set default notification message if null
        this.notification = {
          status: "success",
          message: "I am default message"
        };
      }

      // Detect changes if necessary
      this.cdr.detectChanges();

      // Automatically hide the notification after 3 seconds
      setTimeout(() => {
        this.notification = null;
        this.cdr.detectChanges();
      }, 3000);
    });
  }

}
